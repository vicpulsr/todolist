{"version":3,"sources":["config/TasksConfig.js","components/Header/Header.jsx","components/Main/Task.jsx","components/NewTask/NewTask.jsx","components/Main/Main.jsx","App.js","index.js"],"names":["TasksConfig","createContext","TaskContext","children","useState","name","status","tasks","setTasks","Provider","value","useTasks","context","useContext","Header","getDate","Date","className","getUTCDay","convertDate","numberDay","getUTCDate","convertDay","length","getUTCMonth","convertMonth","onClick","Task","task","isChecked","setIsChecked","FormControlLabel","control","Checkbox","onChange","event","target","checked","label","labelPlacement","NewTask","createTask","setTask","hasError","setHasError","TextField","error","helperText","taskName","variant","placeholder","size","Main","showInput","setShowInput","newTask","map","index","newArray","splice","console","log","App","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9895f177.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst TasksConfig = createContext();\n\nexport default function TaskContext({ children }) {\n    const [tasks, setTasks] = useState([{ name: 'work', status: false }, { name: 'better', status: false }, { name: 'faster', status: false }]);\n\n    return (\n        <TasksConfig.Provider value={{ tasks, setTasks }} >\n            {children}\n        </TasksConfig.Provider>\n    )\n}\n\nexport function useTasks() {\n    const context = useContext(TasksConfig);\n    const { tasks, setTasks } = context;\n    return { tasks, setTasks };\n}","import React from 'react';\n\nimport './Header.css';\n\nimport { useTasks }  from '../../config/TasksConfig';\n\nfunction Header() {\n\n    const { tasks, setTasks } = useTasks();\n\n    function clearTasks() {\n        setTasks([]);\n    }\n\n    function getDate() {\n        const newDate = new Date();\n        return newDate;\n    }\n\n    function convertDate() {\n        let day = getDate().getUTCDay();\n        switch (day) {\n            case 0: \n            return 'Sunday';\n            case 1:\n            return 'Monday';\n            case 2:\n            return 'Tuesday';\n            case 3:\n            return 'Wednesday';\n            case 4:\n            return 'Thursday';\n            case 5:\n            return 'Friday';\n            case 6:\n            return 'Saturday';    \n            default:\n            return 'Week Day'\n        }\n    }\n\n    function convertMonth() {\n        let month = getDate().getUTCMonth();\n        switch (month) {\n            case 0: \n            return 'January';\n            case 1:\n            return 'February';\n            case 2:\n            return 'March';\n            case 3:\n            return 'April';\n            case 4:\n            return 'May';\n            case 5:\n            return 'June';\n            case 6:\n            return 'July';    \n            case 7:\n            return 'August';\n            case 8:\n            return 'September';\n            case 9:\n            return 'October';\n            case 10:\n            return 'November';\n            case 11:\n            return 'December';\n            default:\n            return 'Month';\n        }\n    }\n\n    function convertDay() {\n        let numberDay = getDate().getUTCDate();\n        if (numberDay === 1 || numberDay === 21 || numberDay === 31) {\n            return numberDay + 'st';\n        } \n        if (numberDay === 2 || numberDay === 22) {\n            return numberDay + 'nd';\n        } \n        if (numberDay === 3 || numberDay === 23) {\n            return numberDay + 'rd'\n        }\n        if ((numberDay > 3 && numberDay < 21) || (numberDay > 23 && numberDay <= 30)) {\n            return numberDay + 'th'\n        }\n    }\n\n    return (\n        <>\n            <div className=\"header\">\n                <div className=\"first-line\">\n                    <span className=\"day\"><strong>{convertDate()},</strong> {convertDay()}</span>\n                    <span className=\"quantity-tasks\">{tasks.length} tasks</span>\n                </div>\n                <div className=\"second-line\">\n                    <span className=\"month\">{convertMonth()}</span>\n                    <button className=\"btn-clear\" onClick={clearTasks}>Clear List</button>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Header; ","import React, { useState } from 'react';\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\n\nfunction Task({ task }) {\n\n    const [isChecked, setIsChecked] = useState(false);\n\n    function checked(event) {\n        setIsChecked(event.target.checked)\n    }\n\n    return (\n        <div className={isChecked ? 'task taskDone' : 'task'}>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        name=\"checkbox\"\n                        onChange={(event) => { checked(event) }}\n                    />}\n                label={task.name} labelPlacement=\"end\" />\n        </div>\n    );\n}\n\nexport default Task;","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\n\nfunction NewTask ( { createTask }) {\n\n    const [task, setTask] = useState({});\n    const [hasError, setHasError] = useState(false);\n\n    function handleChangeTask(event) {\n        const taskName = event.target.value;\n        setTask({ name: taskName, status: false });\n        setHasError(false);\n    }\n\n    return(\n        <div className=\"new-task\">\n            <TextField error={hasError} helperText=\"Type some task\" value={task.name} onChange={handleChangeTask} variant=\"standard\" placeholder=\" + Type your task\" size=\"medium\" />\n            <button className=\"btn-clear btn-addNewTask\" onClick={() => {\n                if(task.name && task.name.length !== 0) {\n                    createTask(task)\n                } else {\n                    setHasError(true);\n                } \n                } }>Add</button>\n        </div>\n    );\n}\n\nexport default NewTask;","import React, { useState } from 'react';\nimport { ImBin } from 'react-icons/im';\n\nimport './Main.css';\n\nimport Task from './Task';\nimport NewTask from '../NewTask/NewTask';\n\nimport { useTasks } from '../../config/TasksConfig';\n\n\nfunction Main() {\n\n    const { tasks, setTasks } = useTasks();\n\n    const [showInput, setShowInput] = useState(false);\n\n    function showCreate() {\n        setShowInput(true);\n    }\n\n    function createTask(newTask) {\n        setTasks([...tasks, newTask]);\n        setShowInput(false);\n    }\n\n\n    return (\n        <div className=\"main\">\n            {showInput ? <NewTask createTask={createTask} /> : <button className=\"btn-add\" onClick={showCreate} > + Type your task</button>}\n            <div className=\"tasks\">\n                {tasks.map((task, index) => {\n                    return (\n                        <div className=\"task\" key={index}>\n                            <Task task={task} />\n                            <button onClick={() => {\n                                let newArray = [...tasks];\n                                newArray.splice(index, 1);\n                                setTasks(newArray);\n                                console.log(tasks);\n                            }} className=\"btn-clear\"><ImBin /></button>\n                        </div>\n                    );\n                })}\n            </div>\n\n            <span className=\"footer\">Inspired by <span>Enrio Dybell</span></span>\n        </div>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\n\nimport { Container } from '@material-ui/core';\n\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\n\n// import { Tasks } from './contexts/Tasks';\n// import useTasks from './hooks/useTasks';\n\nimport TasksConfig from './config/TasksConfig';\n\nfunction App() {\n\n\n  return (\n    <div className=\"container\">\n    <TasksConfig >\n      <Container maxWidth=\"sm\">\n        <Header />\n        <Main />\n      </Container>\n    </TasksConfig>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}